---
- name: Install dependencies
  hosts: ubuntu_slave
  become: true
  gather_facts: true
  tasks:
    - name: Update apt-get repo and cache
      ansible.builtin.apt:
        update_cache: true
        force_apt_get: true
        cache_valid_time: 3600
    - name: Upgrade all apt packages
      ansible.builtin.apt:
        upgrade: dist
        force_apt_get: true
    - name: Install utilities
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - htop
          - chromium-browser
          - software-properties-common
        update_cache: true
    - name: Install Docker packages
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        update_cache: true
    - name: Install language components
      ansible.builtin.apt:
        pkg:
          - node-typescript
          - npm
        update_cache: true
    - name: Add specified repository into sources list
      ansible.builtin.apt_repository:
        repo: ppa:ansible/ansible
        state: present
    - name: Add specified repository into sources list
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present
    - name: Install Ansible tooling
      ansible.builtin.apt:
        pkg:
          - ansible
          - python3-pip
          - python3-paramiko
          - mailutils-mh
          - python3.10
        update_cache: true
    - name: Install ansible-pylibssh
      become: true
      ansible.builtin.pip:
        name:
          - ansible-pylibssh
    - name: Configure Docker repository
      block:
        - name: Ensure keyrings directory exists
          ansible.builtin.file:
            path: /etc/apt/keyrings
            state: directory
            mode: "0755"
        - name: Download Docker GPG key
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /tmp/docker.gpg
            mode: "0644"
        - name: De-armor Docker GPG key
          ansible.builtin.command: >
            gpg --dearmor --yes --output /etc/apt/keyrings/docker.gpg /tmp/docker.gpg
          args:
            creates: /etc/apt/keyrings/docker.gpg
        - name: Ensure Docker GPG key permissions
          ansible.builtin.file:
            path: /etc/apt/keyrings/docker.gpg
            mode: "0644"
        - name: Remove temporary Docker key
          ansible.builtin.file:
            path: /tmp/docker.gpg
            state: absent
        - name: Determine Docker repository architecture
          ansible.builtin.set_fact:
            docker_repo_arch: >-
              {{ (ansible_facts['architecture'] | default(ansible_architecture))
              | replace('x86_64', 'amd64') }}
        - name: Configure Docker repository list
          ansible.builtin.copy:
            dest: /etc/apt/sources.list.d/docker.list
            content: >
              deb [arch={{ docker_repo_arch }}
              signed-by=/etc/apt/keyrings/docker.gpg]
              https://download.docker.com/linux/ubuntu
              {{ ansible_lsb.codename }} stable
            mode: "0644"
        - name: Update apt cache after Docker repo addition
          ansible.builtin.apt:
            update_cache: true

- name: Reboot please?
  hosts: ubuntu_slave
  become: true
  gather_facts: true
  tasks:
    - name: Check if a reboot is needed for Debian and Ubuntu boxes
      register: reboot_required_file
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_md5: false
    - name: Reboot the Debian or Ubuntu server
      ansible.builtin.reboot:
        msg: "Reboot initiated due to kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists
